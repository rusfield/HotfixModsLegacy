@using HotfixMods.Infrastructure.InfoModels
@using HotfixMods.Infrastructure.Blazor.Components.DtoContent
@using HotfixMods.Core.Enums.Db2

@inherits DtoContentBase<CreatureDto, CreatureDisplayInfoExtra>

<StandardDtoContent T="CreatureDisplayInfoExtra">
    <MudItem xs="3">
        <Input_Element T="sbyte" @bind-Value="Value.DisplayRaceID" ValueCompare="ValueCompare?.DisplayRaceID" Label="@nameof(Value.DisplayRaceID).ToDisplayName()" GetOptionsAsync_Func="GetRaces" OnInfoAdornmentClick="@(OpenInfoDialog(info.DisplayRaceID))" />
        <Input_Element T="sbyte" @bind-Value="Value.DisplayClassID" ValueCompare="ValueCompare?.DisplayClassID" Label="@nameof(Value.DisplayClassID).ToDisplayName()" GetOptionsAsync_Func="GetClasses" OnInfoAdornmentClick="@(OpenInfoDialog(info.DisplayClassID))" />
        <Input_Element T="sbyte" @bind-Value="Value.DisplaySexID" ValueCompare="ValueCompare?.DisplaySexID" Label="@nameof(Value.DisplaySexID).ToDisplayName()" GetOptionsAsync_Func="GetGenders" OnInfoAdornmentClick="@(OpenInfoDialog(info.DisplaySexID))" />
    </MudItem>
    <MudItem xs="6">
        <Placeholder_Element Amount="4" />
    </MudItem>
    <MudItem xs="3">
        <Input_Element T="sbyte" @bind-Value="Value.Flags" ValueCompare="ValueCompare?.Flags" Label="@nameof(Value.Flags).ToDisplayName()" OnInfoAdornmentClick="@(OpenInfoDialog(info.Flags))" />
        <Input_Element T="int" @bind-Value="Value.HDBakeMaterialResourcesID" ValueCompare="ValueCompare?.HDBakeMaterialResourcesID" Label="HD Bake Material Resources ID" OnInfoAdornmentClick="@(OpenInfoDialog(info.HDBakeMaterialResourcesID))" />
        <Input_Element T="int" @bind-Value="Value.BakeMaterialResourcesID" ValueCompare="ValueCompare?.BakeMaterialResourcesID" Label="@nameof(Value.BakeMaterialResourcesID).ToDisplayName()" OnInfoAdornmentClick="@(OpenInfoDialog(info.BakeMaterialResourcesID))" />
    </MudItem>
</StandardDtoContent>

@code {
    CreatureDisplayInfoExtraInfo info = new();

    async Task<Dictionary<sbyte, string>> GetGenders()
    {
        return Enum.GetValues<Gender>().ToDictionary(key => (sbyte)key, value => value.ToDisplayString());
    }

    async Task<Dictionary<sbyte, string>> GetClasses()
    {
        return Enum.GetValues<ChrClassId>().ToDictionary(key => (sbyte)key, value => value.ToDisplayString());
    }

    async Task<Dictionary<sbyte, string>> GetRaces()
    {
        return Enum.GetValues<ChrRaceId>().ToDictionary(key => (sbyte)key, value => value.ToDisplayString());
    }

}