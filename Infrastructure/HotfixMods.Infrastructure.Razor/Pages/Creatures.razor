@using HotfixMods.Infrastructure.Razor.Pages.CreatureTabs
@using HotfixMods.Infrastructure.Razor.Pages.Shared

@inject CreatureService Service
@inherits HotfixPageBase<IDto>

@if (null == PageTab.Dto)
{
    <TabContentView GetDashboardModelsAsync_Func="GetDashboardModelsAsync" NewAsync_Callback="NewAsync_Click<CreatureSearch_Dialog>" Title="Creatures" EditAsync_Callback="EditAsync" DeleteAsync_Callback="DeleteAsync" />
}
else
{
    <TabContentEditHeader IsUpdate="false" Title="Creatures" ValueCompare_Callback="@(async () => ValueCompareAsync_Click<CreatureSearch_Dialog>())" SaveAsync_Callback="SaveAsync">
        <ChildContent>
            <MudTabPanel Class="custom-mud-tabs">
                <TabContent>
                    <TabTitle_Element Line1="HotfixMods" Line2="Entity" />
                </TabContent>
                <ChildContent>
                    <TabContentEditBody T="HotfixModsEntity">
                        <HotfixModsEntity_Tab @bind-IsUpdate="((CreatureDto)PageTab.Dto).IsUpdate" />
                    </TabContentEditBody>
                </ChildContent>
            </MudTabPanel>
            <MudTabPanel Class="custom-mud-tabs">
                <TabContent>
                    <TabTitle_Element Line1="Creature" Line2="Template" />
                </TabContent>
                <ChildContent>
                    <TabContentEditBody T="CreatureTemplate" AmountOfPages="4" @bind-CurrentPage="currentCreatureTemplatePage">
                        <CreatureTemplate_Tab />
                    </TabContentEditBody>
                </ChildContent>
            </MudTabPanel>
            <MudTabPanel Class="custom-mud-tabs">
                <TabContent>
                    <TabTitle_Element Line1="Creature" Line2="Template Addon" />
                </TabContent>
                <ChildContent>
                    <TabContentEditBody T="CreatureTemplateAddon">
                        <CreatureTemplateAddon_Tab />
                    </TabContentEditBody>
                </ChildContent>
            </MudTabPanel>
            <MudTabPanel Class="custom-mud-tabs">
                <TabContent>
                    <TabTitle_Element Line1="Creature" Line2="Model Info" />
                </TabContent>
                <ChildContent>
                    <TabContentEditBody T="CreatureModelInfo">
                        <CreatureModelInfo_Tab />
                    </TabContentEditBody>
                </ChildContent>
            </MudTabPanel>
            <MudTabPanel Class="custom-mud-tabs">
                <TabContent>
                    <TabTitle_Element Line1="Creature" Line2="Equip Template" />
                </TabContent>
                <ChildContent>
                    <TabContentEditBody T="CreatureEquipTemplate">
                        <CreatureEquipTemplate_Tab />
                    </TabContentEditBody>
                </ChildContent>
            </MudTabPanel>
            <MudTabPanel Class="custom-mud-tabs">
                <TabContent>
                    <TabTitle_Element Line1="Creature" Line2="Display Info" />
                </TabContent>
                <ChildContent>
                    <TabContentEditBody T="CreatureDisplayInfo" AmountOfPages="2" @bind-CurrentPage="currentDisplayInfoPage">
                        <CreatureDisplayInfo_Tab />
                    </TabContentEditBody>
                </ChildContent>
            </MudTabPanel>
            <MudTabPanel Class="custom-mud-tabs">
                <TabContent>
                    <TabTitle_Element Line1="Creature Display" Line2="Info Extra" />
                </TabContent>
                <ChildContent>
                    <TabContentEditBody T="CreatureDisplayInfoExtra">
                        <CreatureDisplayInfoExtra_Tab />
                    </TabContentEditBody>
                </ChildContent>
            </MudTabPanel>
            <MudTabPanel Class="custom-mud-tabs">
                <TabContent>
                    <TabTitle_Element Line1="Creature Display" Line2="Info Option" />
                </TabContent>
                <ChildContent>
                    <TabContentEditBody T="object" AmountOfPages="amountOfCustomizationPages" CurrentPage="1" CustomValueHandling="true">
                        <CreatureDisplayInfoOption_Tab @bind-ChrModelId="((CreatureDto)PageTab.Dto).ChrModelId" Values="((CreatureDto)PageTab.Dto).CreatureDisplayInfoOption" CustomizationsChanged="SetAmountOfCustomizationPages" />
                    </TabContentEditBody>
                </ChildContent>
            </MudTabPanel>
            <MudTabPanel Class="custom-mud-tabs">
                <TabContent>
                    <TabTitle_Element Line1="NPC Model Item" Line2="Slot Display Info" />
                </TabContent>
                <ChildContent>
                    <TabContentEditBody T="object" CustomValueHandling="true">
                        <NpcModelItemSlotDisplayInfo_Tab Values="((CreatureDto)PageTab.Dto).NpcModelItemSlotDisplayInfo" />
                    </TabContentEditBody>
                </ChildContent>
            </MudTabPanel>
        </ChildContent>
    </TabContentEditHeader>
}

@code {
    int amountOfCustomizationPages = 0;
    int currentDisplayInfoPage = 1;
    int currentCreatureTemplatePage = 1;

    void SetAmountOfCustomizationPages(int pages)
    {
        amountOfCustomizationPages = pages;
        this.StateHasChanged();
    }


    async void SaveAsync()
    {
        await Service.SaveAsync((CreatureDto)PageTab.Dto);
    }

    async Task<List<DashboardModel>> GetDashboardModelsAsync()
    {
        return await Service.GetDashboardModelsAsync();
    }

    async Task DeleteAsync(DashboardModel model)
    {
        await Service.DeleteAsync(model.Id);
    }

    async Task EditAsync(DashboardModel model)
    {
        var data = await Service.GetByIdAsync(model.Id);
        if (data != null)
        {
            var parameters = new DialogParameters() { { "Id", model.Id } };
            NewAsync_Click<CreatureSearch_Dialog>(parameters);
        }
        else
        {
            // TODO: Toast; not found
        }
    }
}