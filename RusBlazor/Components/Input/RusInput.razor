@typeparam TValue
@inherits InputBase<TValue>

<div class="rus-input-container">
    <input id="@id" @bind="Value" @onfocus="@OnFocus" @onblur="@OnBlur" @oninput="@OnInput" class="rus-input" disabled="@Disabled" />
    <div class="rus-input-subtext">@HelperText</div>
</div>

@code {
    [Parameter]
    public EventCallback OnFocus { get; set; }

    [Parameter]
    public EventCallback OnBlur { get; set; }

    [Parameter]
    public EventCallback<string> InputChanged { get; set; }

    [Parameter]
    public string HelperText { get; set; }

    [Parameter]
    public bool Disabled { get; set; } = false;

    string id;

    protected override void OnInitialized()
    {
        id = Guid.NewGuid().ToString();
        base.OnInitialized();
    }

    void OnInput(ChangeEventArgs args)
    {
        InputChanged.InvokeAsync(args.Value.ToString());
    }

    public string GetId()
    {
        return id;
    } 

    protected override bool TryParseValueFromString(string value, out TValue result, out string validationErrorMessage)
    {
        throw new NotImplementedException();
    }
}