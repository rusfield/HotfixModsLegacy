@using HotfixMods.Infrastructure.Config;
@using System.Diagnostics

@inject AppConfig Config
@inject ISnackbar Snackbar
@inject HotfixService Service

<MudGrid Class="mb-1 px-3" Style="height:36.5px">
    <MudItem xs="4" />
    <MudItem xs="4">
        <MudText Typo="Typo.h4" Align="Align.Center" Style="width:100%;font-size:2.5rem;position:relative;top:-13px;">
            Health
        </MudText>
    </MudItem>
    <MudItem xs="4">
        <MudStack Row="true" Justify="Justify.FlexEnd">
            <MudButton Disabled="healthProgress" Variant="Variant.Filled" Color="Color.Success" OnClick="RunHealthCheckAsync_Click">
                @if (healthProgress)
                {
                    <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                }
                else
                {
                    @("Health Check")
                }
            </MudButton>
        </MudStack>
    </MudItem>
</MudGrid>


<MudPaper Height="684px" Class="pt-4 mx-3 px-6">
    <MudGrid>
        <MudItem xs="6">
        </MudItem>
        <MudItem xs="6">
            <MudText Typo="Typo.h5" Style="color:var(--mud-palette-action-disabled); width:100%" Align="Align.Center">
                DB2
            </MudText>
            <MudDivider />
            <MudStack Row="true" Class="py-2">
                <MudTextField @bind-Value="Config.Db2Path" Variant="Variant.Outlined" Label="DB2 Path" />
            </MudStack>
        </MudItem>
    </MudGrid>
</MudPaper>


@code {
    bool healthProgress = false;

    async Task RunHealthCheckAsync_Click()
    {
        healthProgress = true;
        await Service.CheckDtoHealthAsync();
    }
}
