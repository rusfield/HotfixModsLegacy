@using RusBlazor.Enums

<button class="@($"rus-button ripple {Color.ToString().ToLower()}-gradient {Class} {(DefaultPadding ? "padding" : "no-padding")}")" style="@(Style)" @onclick="OnClick" disabled="@Disabled" @onmouseover="OnMouseOver" @onmouseout="OnMouseOut" id="@(_id)">
    @ChildContent
</button>


@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public EventCallback OnClick { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public string? Style { get; set; }

    [Parameter]
    public EventCallback OnMouseOver { get; set; }

    [Parameter]
    public EventCallback OnMouseOut { get; set; }

    [Parameter] // Disabled mostly for Icon buttons
    public bool DefaultPadding { get; set; } = true;

    [Parameter]
    public Color Color { get; set; } = Color.PRIMARY;

    string _id;

    public RusButton()
    {
        _id = Guid.NewGuid().ToString().ToLower();
    }
}