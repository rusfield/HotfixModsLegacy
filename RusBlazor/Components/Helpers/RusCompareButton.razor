@using RusBlazor.Enums
@using RusBlazor.Handlers

<div class=@($"rus-compare-button {ActiveClass()}") onmouseover="@(() => HandleHover(true))" onmouseout="@(() => HandleHover(false))">
    <RusButton DefaultPadding="false" Style="@($"border-radius: 50%; height: 24px;")" OnClick="HandleClick" Color="Color.TERTIARY">
        <RusIcon IconName="arrow_right_alt" />
    </RusButton>
</div>

@code {
    [Parameter]
    public EventCallback OnClick { get; set; }

    [Parameter]
    public EventCallback<bool> OnHover { get; set; }

    [Parameter]
    public string Style { get; set; }

    [Parameter]
    public bool Active { get; set; } = false;

    [Parameter]
    public string TooltipText { get; set; } = "";

    bool internalHover = false;

    async void HandleHover(bool isHovering)
    {
        internalHover = isHovering;
        if (isHovering)
        {
            TooltipHandler.DisplayTooltip(TooltipText);
        }
        else
        {
            TooltipHandler.ResetTooltip();
        }

        await OnHover.InvokeAsync(isHovering);
    }

    async void HandleClick()
    {
        TooltipHandler.ResetTooltip();
        await OnClick.InvokeAsync();
    }

    string ActiveClass()
    {
        return (Active || internalHover) ? "active" : "";
    }
}