@using Extensions;

@page "/"


<RusSelect GetOptionsAsync="GetFruitsAsync" />
<hr />
<RusMultiselect GetOptionsAsync="GetFruitsMultiselectAsync" />


@code{
    private int selectedItem = 0;
    private IEnumerable<string> selectedItems = new List<string>();

    async Task<Dictionary<int, string>> GetFruitsAsync(string search, CancellationToken token)
    {
        await Task.Delay(1000, token);
        var results = new Dictionary<int, string>();
        int id = 1;
        foreach (var item in items)
        {
            token.ThrowIfCancellationRequested();

            if (item.Contains(search, StringComparison.InvariantCultureIgnoreCase))
                results.Add(id, item);

            if (search.TryParseT<int>(out var value) && id == value && !results.ContainsKey(value))
                results.Add(id, item);

            id++;
        }
        return results;
    }

    async Task<Dictionary<int, (string, bool)>> GetFruitsMultiselectAsync(string search, CancellationToken token)
    {
        await Task.Delay(500, token);
        var results = new Dictionary<int, (string, bool)>();
        int id = 1;
        foreach (var item in items)
        {
            token.ThrowIfCancellationRequested();
            if (item.Contains(search, StringComparison.InvariantCultureIgnoreCase))
                results.Add(id, (item, id % 2 == 0));

            if (search.TryParseT<int>(out var value) && id == value && !results.ContainsKey(value))
                results.Add(id, (item, id % 2 == 0));
                
            id = id * 2;
        }
        return results;
    }

    private List<string> items = new List<string>
    {
        "Apple",
        "Banana",
        "Cherry",
        "Date",
        "Fig",
        "Grape",
        "Kiwi",
        "Lemon",
        "Mango",
        "Nectarine",
        "Orange",
        "Papaya",
        "Pineapple",
        "Raspberry",
        "Strawberry",
        "Watermelon Watermelon Watermelon Watermelon Watermelon Watermelon Watermelon Watermelon Watermelon Watermelon Watermelon Watermelon"
    };
}