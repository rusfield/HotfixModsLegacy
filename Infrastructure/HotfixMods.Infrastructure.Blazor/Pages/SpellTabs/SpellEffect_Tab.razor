@using HotfixMods.Infrastructure.Blazor.Components.DtoContent

@inherits DtoContentBase<SpellDto, SpellEffect>

    @*
<MudCarouselItem Transition="TransitionHandler.Transition" CustomTransitionEnter="@TransitionHandler.EnterTransition" CustomTransitionExit="@TransitionHandler.ExitTransition">
    <MudGrid>
        <MudItem xs="3">
            <Input_Element T="int" @bind-Value="Value.EffectIndex" ValueCompare="ValueCompare?.EffectIndex" Label="@nameof(Value.EffectIndex).ToDisplayName()" />
            <Input_Element T="short" @bind-Value="Value.EffectAura" ValueCompare="ValueCompare?.EffectAura" Label="@nameof(Value.EffectAura).ToDisplayName()" />
            <Input_Element T="uint" @bind-Value="Value.Effect" ValueCompare="ValueCompare?.Effect" Label="@nameof(Value.Effect).ToDisplayName()" />
            <Input_Element T="decimal" @bind-Value="Value.EffectAmplitude" ValueCompare="ValueCompare?.EffectAmplitude" Label="@nameof(Value.EffectAmplitude).ToDisplayName()" />
            <Input_Element T="int" @bind-Value="Value.EffectAttributes" ValueCompare="ValueCompare?.EffectAttributes" Label="@nameof(Value.EffectAttributes).ToDisplayName()" />

        </MudItem>
        <MudItem xs="6">
            <Placeholder_Element Amount="4" />

        </MudItem>
        <MudItem xs="3">
            <Input_Element T="int" @bind-Value="Value.EffectAuraPeriod" ValueCompare="ValueCompare?.EffectAuraPeriod" Label="@nameof(Value.EffectAuraPeriod).ToDisplayName()" />
            <Input_Element T="decimal" @bind-Value="Value.EffectBonusCoefficient" ValueCompare="ValueCompare?.EffectBonusCoefficient" Label="@nameof(Value.EffectBonusCoefficient).ToDisplayName()" />
            <Input_Element T="decimal" @bind-Value="Value.EffectChainAmplitude" ValueCompare="ValueCompare?.EffectChainAmplitude" Label="@nameof(Value.EffectChainAmplitude).ToDisplayName()" />
            <Input_Element T="int" @bind-Value="Value.EffectChainTargets" ValueCompare="ValueCompare?.EffectChainTargets" Label="@nameof(Value.EffectChainTargets).ToDisplayName()" />
            <Input_Element T="int" @bind-Value="Value.EffectItemType" ValueCompare="ValueCompare?.EffectItemType" Label="@nameof(Value.EffectItemType).ToDisplayName()" />
            <Input_Element T="int" @bind-Value="Value.EffectMechanic" ValueCompare="ValueCompare?.EffectMechanic" Label="@nameof(Value.EffectMechanic).ToDisplayName()" />

        </MudItem>
    </MudGrid>
</MudCarouselItem>
<MudCarouselItem Transition="TransitionHandler.Transition" CustomTransitionEnter="@TransitionHandler.EnterTransition" CustomTransitionExit="@TransitionHandler.ExitTransition">
    <MudGrid>
        <MudItem xs="3">
            <Input_Element T="decimal" @bind-Value="Value.EffectPointsPerResource" ValueCompare="ValueCompare?.EffectPointsPerResource" Label="@nameof(Value.EffectPointsPerResource).ToDisplayName()" />
            <Input_Element T="decimal" @bind-Value="Value.EffectPos_facing" ValueCompare="ValueCompare?.EffectPos_facing" Label="@nameof(Value.EffectPos_facing).ToDisplayName()" />
            <Input_Element T="decimal" @bind-Value="Value.EffectRealPointsPerLevel" ValueCompare="ValueCompare?.EffectRealPointsPerLevel" Label="@nameof(Value.EffectRealPointsPerLevel).ToDisplayName()" />
            <Input_Element T="int" @bind-Value="Value.EffectTriggerSpell" ValueCompare="ValueCompare?.EffectTriggerSpell" Label="@nameof(Value.EffectTriggerSpell).ToDisplayName()" />
            <Input_Element T="decimal" @bind-Value="Value.BonusCoefficientFromAP" ValueCompare="ValueCompare?.BonusCoefficientFromAP" Label="@nameof(Value.BonusCoefficientFromAP).ToDisplayName()" />
            <Input_Element T="decimal" @bind-Value="Value.PvpMultiplier" ValueCompare="ValueCompare?.PvpMultiplier" Label="@nameof(Value.PvpMultiplier).ToDisplayName()" />


        </MudItem>
        <MudItem xs="6">
            <Placeholder_Element Amount="4" />

        </MudItem>
        <MudItem xs="3">
            <Input_Element T="decimal" @bind-Value="Value.Coefficient" ValueCompare="ValueCompare?.Coefficient" Label="@nameof(Value.Coefficient).ToDisplayName()" />
            <Input_Element T="decimal" @bind-Value="Value.Variance" ValueCompare="ValueCompare?.Variance" Label="@nameof(Value.Variance).ToDisplayName()" />
            <Input_Element T="decimal" @bind-Value="Value.ResourceCoefficient" ValueCompare="ValueCompare?.ResourceCoefficient" Label="@nameof(Value.ResourceCoefficient).ToDisplayName()" />
            <Input_Element T="decimal" @bind-Value="Value.GroupSizeBasePointsCoefficient" ValueCompare="ValueCompare?.GroupSizeBasePointsCoefficient" Label="@nameof(Value.GroupSizeBasePointsCoefficient).ToDisplayName()" />
            <Input_Element T="decimal" @bind-Value="Value.EffectBasePointsF" ValueCompare="ValueCompare?.EffectBasePointsF" Label="@nameof(Value.EffectBasePointsF).ToDisplayName()" />
            <Input_Element T="int" @bind-Value="Value.ScalingClass" ValueCompare="ValueCompare?.ScalingClass" Label="@nameof(Value.ScalingClass).ToDisplayName()" />

        </MudItem>
    </MudGrid>
</MudCarouselItem>
<MudCarouselItem Transition="TransitionHandler.Transition" CustomTransitionEnter="@TransitionHandler.EnterTransition" CustomTransitionExit="@TransitionHandler.ExitTransition">
    <MudGrid>
        <MudItem xs="3">
            <Input_Element T="int" @bind-Value="Value.EffectMiscValue1" ValueCompare="ValueCompare?.EffectMiscValue1" Label="@nameof(Value.EffectMiscValue1).ToDisplayName()" />
            <Input_Element T="int" @bind-Value="Value.EffectMiscValue2" ValueCompare="ValueCompare?.EffectMiscValue2" Label="@nameof(Value.EffectMiscValue2).ToDisplayName()" />
            <Input_Element T="uint" @bind-Value="Value.EffectRadiusIndex1" ValueCompare="ValueCompare?.EffectRadiusIndex1" Label="@nameof(Value.EffectRadiusIndex1).ToDisplayName()" />
            <Input_Element T="uint" @bind-Value="Value.EffectRadiusIndex2" ValueCompare="ValueCompare?.EffectRadiusIndex2" Label="@nameof(Value.EffectRadiusIndex2).ToDisplayName()" />
            <Input_Element T="int" @bind-Value="Value.EffectSpellClassMask1" ValueCompare="ValueCompare?.EffectSpellClassMask1" Label="@nameof(Value.EffectSpellClassMask1).ToDisplayName()" />
            <Input_Element T="int" @bind-Value="Value.EffectSpellClassMask2" ValueCompare="ValueCompare?.EffectSpellClassMask2" Label="@nameof(Value.EffectSpellClassMask2).ToDisplayName()" />
            <Input_Element T="int" @bind-Value="Value.EffectSpellClassMask3" ValueCompare="ValueCompare?.EffectSpellClassMask3" Label="@nameof(Value.EffectSpellClassMask3).ToDisplayName()" />
            <Input_Element T="int" @bind-Value="Value.EffectSpellClassMask4" ValueCompare="ValueCompare?.EffectSpellClassMask4" Label="@nameof(Value.EffectSpellClassMask4).ToDisplayName()" />
            <Input_Element T="short" @bind-Value="Value.ImplicitTarget1" ValueCompare="ValueCompare?.ImplicitTarget1" Label="@nameof(Value.ImplicitTarget1).ToDisplayName()" />
            <Input_Element T="short" @bind-Value="Value.ImplicitTarget2" ValueCompare="ValueCompare?.ImplicitTarget2" Label="@nameof(Value.ImplicitTarget2).ToDisplayName()" />


        </MudItem>
        <MudItem xs="6">
            <Placeholder_Element Amount="4" />

        </MudItem>
        <MudItem xs="3">
            <Input_Element T="int" @bind-Value="Value.DifficultyId" ValueCompare="ValueCompare?.DifficultyId" Label="@nameof(Value.DifficultyId).ToDisplayName()" />

        </MudItem>
    </MudGrid>
</MudCarouselItem>

*@