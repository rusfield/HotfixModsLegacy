@using HotfixMods.Infrastructure.InfoModels
@using HotfixMods.Infrastructure.Blazor.Components.DtoContent
@using HotfixMods.Core.Enums.Db2

@inherits DtoContentBase<CreatureDto, CreatureDisplayInfoExtra>

<StandardDtoContent T="CreatureDisplayInfoExtra">
    <MudItem xs="3">
        <Input_Element T="sbyte" @bind-Value="Value.DisplayRaceId" ValueCompare="ValueCompare?.DisplayRaceId" Label="@nameof(Value.DisplayRaceId).ToDisplayName()" GetOptionsAsync_Func="GetRaces" AllowUndefinedValues="true" />
        <Input_Element T="sbyte" @bind-Value="Value.DisplayClassId" ValueCompare="ValueCompare?.DisplayClassId" Label="@nameof(Value.DisplayClassId).ToDisplayName()" GetOptionsAsync_Func="GetClasses" AllowUndefinedValues="true" />
        <Input_Element T="sbyte" @bind-Value="Value.DisplaySexId" ValueCompare="ValueCompare?.DisplaySexId" Label="@nameof(Value.DisplaySexId).ToDisplayName()" GetOptionsAsync_Func="GetGenders" AllowUndefinedValues="true" />
    </MudItem>
    <MudItem xs="6">
        <Placeholder_Element Amount="4" />
    </MudItem>
    <MudItem xs="3">
        <Input_Element T="sbyte" @bind-Value="Value.Flags" ValueCompare="ValueCompare?.Flags" Label="@nameof(Value.Flags).ToDisplayName()" />
        <Input_Element T="int" @bind-Value="Value.HDBakeMaterialResourcesId" ValueCompare="ValueCompare?.HDBakeMaterialResourcesId" Label="HD Bake Material Resources ID" />
        <Input_Element T="int" @bind-Value="Value.BakeMaterialResourcesId" ValueCompare="ValueCompare?.BakeMaterialResourcesId" Label="@nameof(Value.BakeMaterialResourcesId).ToDisplayName()" />
    </MudItem>
</StandardDtoContent>

@code {


    async Task<Dictionary<sbyte, string>> GetGenders()
    {
        return Enum.GetValues<Gender>().ToDictionary(key => (sbyte)key, value => value.ToDisplayString());
    }

    async Task<Dictionary<sbyte, string>> GetClasses()
    {
        return Enum.GetValues<ChrClassId>().ToDictionary(key => (sbyte)key, value => value.ToDisplayString());
    }

    async Task<Dictionary<sbyte, string>> GetRaces()
    {
        return Enum.GetValues<ChrRaceId>().ToDictionary(key => (sbyte)key, value => value.ToDisplayString());
    }

}