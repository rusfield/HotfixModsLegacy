@for (int i = 0; i < Amount; i++)
{
    if (IsNested)
    {
        if (Skeleton)
        {
            <MudSkeleton Height="56px" Width="100%" SkeletonType="SkeletonType.Rectangle" Class="@(Visible ? "" : "invisible")" Style="margin-bottom:16.91px;margin-top:6px;" />
        }
        else
        {
            <MudProgressCircular Size="Size.Small" Color="Color.Default" Indeterminate="true" Style="position:absolute;left:calc(50% - 12px);top:38px;" />
            <MudTextField T="string" Value="@(" ")" Label="@Label" Variant="Variant.Outlined" HelperText="Loading" HelperTextOnFocus="true" Disabled="true" />
        }
    }
    else
    {
        <div class="custom-wrapper">
            <MudStack Style="height:100.91px" Justify="Justify.Center">
                <MudSkeleton Height="56px" Width="100%" SkeletonType="SkeletonType.Rectangle" Class="@(Visible ? "" : "invisible")" />
            </MudStack>
        </div>
    }
}

@code
{
    [Parameter]
    public int Amount { get; set; } = 1;

    [Parameter]
    public bool Visible { get; set; } = false;

    [Parameter]
    public bool IsNested { get; set; } = false; // Used for when its a placeholder for Autocomplete, Single select etc, and uses different paddings and margins.

    [Parameter]
    public string? Label { get; set; }

    [Parameter]
    public bool Skeleton { get; set; } = true;
}
